plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.hibernate.orm' version '6.6.5.Final'
	id 'org.graalvm.buildtools.native' version '0.10.4'
	id 'org.cyclonedx.bom' version '1.10.0'
}

group = 'io.github.samzhu'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springAiVersion', "1.0.0-M5")
	set('springCloudVersion', "2024.0.0")
	set('springModulithVersion', "1.3.1")
}

dependencies {
	// Spring Boot Core & Web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'io.github.wimdeblauwe:htmx-spring-boot:4.0.1'

	// Database
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.liquibase:liquibase-core'
	runtimeOnly 'org.postgresql:postgresql'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	// Spring AI
	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-markdown-document-reader'
	implementation 'org.springframework.ai:spring-ai-pdf-document-reader'
	implementation 'org.springframework.ai:spring-ai-tika-document-reader'
	implementation 'org.springframework.ai:spring-ai-ollama-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-azure-openai-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-anthropic-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-vertex-ai-gemini-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-vertex-ai-embedding-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-stability-ai-spring-boot-starter'
	// Spring AI Vector Stores
	implementation 'org.springframework.ai:spring-ai-mongodb-atlas-store-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-pgvector-store-spring-boot-starter'

	// Spring Cloud
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

	// Spring Modulith
	implementation 'org.springframework.modulith:spring-modulith-starter-core'
	implementation 'org.springframework.modulith:spring-modulith-starter-jdbc'
	implementation 'org.springframework.modulith:spring-modulith-starter-jpa'
	implementation 'org.springframework.modulith:spring-modulith-starter-mongodb'
	runtimeOnly 'org.springframework.modulith:spring-modulith-actuator'
	runtimeOnly 'org.springframework.modulith:spring-modulith-observability'

	// Monitoring & Tracing
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	runtimeOnly 'io.micrometer:micrometer-registry-otlp'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	// Development Tools
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	developmentOnly 'org.springframework.ai:spring-ai-spring-boot-docker-compose'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// Test Dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.ai:spring-ai-spring-boot-testcontainers'
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-binder'
	testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mongodb'
	testImplementation 'org.testcontainers:ollama'
	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
		mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

hibernate {
	enhancement {
		enableAssociationManagement = true
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
